@model IEnumerable<UPC_DropDown.Models.Chart>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Experience and Email Charts</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .chart-container {
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin: 10px;
        }

        .chart-box {
            width: 100%;
        }

            .chart-box canvas {
                width: 70% !important;
                height: auto !important;
            }
    </style>
</head>
<body>
    <h1 style="text-align: center;">User Charts</h1>

    <div class="chart-container">
        <div class="chart-box">
            <h2 style="text-align: center;">User Experience Chart</h2>
            <canvas id="userExperienceChart"></canvas>
        </div>

        <div class="chart-box">
            <h2 style="text-align: center;">User Salary Chart</h2>
            <canvas id="userSalaryChart"></canvas>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Data for the User Experience Chart
            var ctxExperience = document.getElementById('userExperienceChart').getContext('2d');
            var experienceData = {
                labels: @Html.Raw(Json.Serialize(Model.Select(m => m.UserName))),
                datasets: [{
                    label: 'User Experience',
                    data: @Html.Raw(Json.Serialize(Model.Select(m => int.Parse(m.UserExperience)))),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            };

            var userExperienceChart = new Chart(ctxExperience, {
                type: 'polarArea',
                data: experienceData,
                options: {
                    responsive: true,
                    scales: {
                        r: {
                            pointLabels: {
                                display: true,
                                centerPointLabels: true,
                                font: {
                                    size: 18
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                    }
                },
            });

            // Data for the User Salary Chart
            var ctxSalary = document.getElementById('userSalaryChart').getContext('2d');
            var salaryData = {
                labels: @Html.Raw(Json.Serialize(Model.Select(m => m.UserName))),
                datasets: [{
                    label: 'User Name',
                    data: @Html.Raw(Json.Serialize(Model.Select(m => m.UserSalary))), // Length of salary as dummy data
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            };

            var userEmailChart = new Chart(ctxSalary, {
                type: 'bar',
                data: salaryData,
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' characters';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
 